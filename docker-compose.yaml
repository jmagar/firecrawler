name: firecrawl

x-common-service: &common-service
  # NOTE: If you don't want to build the service locally,
  # uncomment the build: statement and comment out the image: statement
  # image: ghcr.io/firecrawl/firecrawl
  build: apps/api

  ulimits:
    nofile:
      soft: 65535
      hard: 65535
  networks:
    - backend
  extra_hosts:
    - "host.docker.internal:host-gateway"

x-common-env: &common-env
  REDIS_URL: ${REDIS_URL:-redis://redis:6379}
  REDIS_RATE_LIMIT_URL: ${REDIS_URL:-redis://redis:6379}
  PLAYWRIGHT_MICROSERVICE_URL: ${PLAYWRIGHT_MICROSERVICE_URL:-http://playwright-service:3000/scrape}
  NUQ_DATABASE_URL: postgres://postgres:postgres@nuq-postgres:5432/postgres
  OPENAI_API_KEY: ${OPENAI_API_KEY}
  MODEL_NAME: ${MODEL_NAME}
  MODEL_EMBEDDING_NAME: ${MODEL_EMBEDDING_NAME} 
  # HuggingFace TEI + Vector Storage Configuration
  TEI_URL: ${TEI_URL:-http://tei-service:8080}
  ENABLE_VECTOR_STORAGE: ${ENABLE_VECTOR_STORAGE:-true}
  VECTOR_STORAGE_ASYNC: ${VECTOR_STORAGE_ASYNC:-true}
  MIN_SIMILARITY_THRESHOLD: ${MIN_SIMILARITY_THRESHOLD:-0.7}
  VECTOR_DIMENSION: ${VECTOR_DIMENSION:-1024}
  BULL_AUTH_KEY: ${BULL_AUTH_KEY}
  LOGGING_LEVEL: ${LOGGING_LEVEL}
  SEARXNG_ENDPOINT: ${SEARXNG_ENDPOINT}
  SEARXNG_ENGINES: ${SEARXNG_ENGINES}
  SEARXNG_CATEGORIES: ${SEARXNG_CATEGORIES}
  MAX_CPU: ${MAX_CPU}
  MAX_RAM: ${MAX_RAM}
  DEFAULT_CRAWL_LANGUAGE: ${DEFAULT_CRAWL_LANGUAGE}

services:
  playwright-service:
    # NOTE: If you don't want to build the service locally,
    # uncomment the build: statement and comment out the image: statement
    # image: ghcr.io/firecrawl/playwright-service:latest
    build: apps/playwright-service-ts
    environment:
      PORT: 3000
      BLOCK_MEDIA: ${BLOCK_MEDIA}
    networks:
      - backend

  api:
    <<: *common-service
    environment:
      <<: *common-env
      HOST: "0.0.0.0"
      PORT: ${INTERNAL_PORT:-3002}
      WORKER_PORT: ${WORKER_PORT:-3005}
      ENV: local
    depends_on:
      nuq-postgres:
        condition: service_healthy
      redis:
        condition: service_started
      playwright-service:
        condition: service_started
    ports:
      - "${PORT:-3002}:${INTERNAL_PORT:-3002}"
    volumes:
      - ./defaults.yaml:/app/defaults.yaml:ro
    command: node dist/src/harness.js --start-docker

  redis:
    # NOTE: If you want to use Valkey (open source) instead of Redis (source available),
    # uncomment the Valkey statement and comment out the Redis statement.
    # Using Valkey with Firecrawl is untested and not guaranteed to work. Use with caution.
    image: redis:alpine
    # image: valkey/valkey:alpine

    networks:
      - backend
    command: redis-server --bind 0.0.0.0
  
  nuq-postgres:
    build: apps/nuq-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - nuq_postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  backend:
    driver: bridge

volumes:
  nuq_postgres_data:
    driver: local
