# ===== Required ENVS ======
NUM_WORKERS_PER_QUEUE=8
PORT=3002
HOST=0.0.0.0
REDIS_URL=redis://redis:6379 #for self-hosting using docker, use redis://redis:6379. For running locally, use redis://localhost:6379
REDIS_RATE_LIMIT_URL=redis://redis:6379 #for self-hosting using docker, use redis://redis:6379. For running locally, use redis://localhost:6379
PLAYWRIGHT_MICROSERVICE_URL=http://playwright-service:3000/scrape

## To turn on DB authentication, you need to set up supabase.
USE_DB_AUTHENTICATION=true

# ===== Optional ENVS ======

# SearchApi key. Head to https://searchapi.com/ to get your API key
SEARCHAPI_API_KEY=
# SearchApi engine, defaults to google. Available options: google, bing, baidu, google_news, etc. Head to https://searchapi.com/ to explore more engines
SEARCHAPI_ENGINE=

# Supabase Setup (used to support DB authentication, advanced logging, etc.)
SUPABASE_ANON_TOKEN=
SUPABASE_URL=
SUPABASE_SERVICE_TOKEN=

# Other Optionals
# use if you've set up authentication and want to test with a real API key
TEST_API_KEY=
# set if you'd like to test the scraping rate limit
RATE_LIMIT_TEST_API_KEY_SCRAPE=
# set if you'd like to test the crawling rate limit
RATE_LIMIT_TEST_API_KEY_CRAWL=
# set if you'd like to use scraping Be to handle JS blocking
SCRAPING_BEE_API_KEY=
# add for LLM dependednt features (image alt generation, etc.)
OPENAI_API_KEY=
BULL_AUTH_KEY=@
# set if you have a llamaparse key you'd like to use to parse pdfs
LLAMAPARSE_API_KEY=

# ===== Vector Storage & Embeddings Configuration =====

# PostgreSQL database URL for vector storage (pgvector)
# Required when ENABLE_VECTOR_STORAGE=true
# Format: postgresql://username:password@host:port/database
NUQ_DATABASE_URL=postgresql://postgres:password@nuq-postgres:5432/postgres

# HuggingFace Text Embeddings Inference (TEI) service endpoint
# Set to your TEI service URL (e.g., http://localhost:8080, http://tei-service:8080)
# Leave empty to use OpenAI embeddings (requires OPENAI_API_KEY)
TEI_URL=

# Embedding model to use
# For TEI: Qwen/Qwen3-Embedding-0.6B, sentence-transformers/all-MiniLM-L6-v2, BAAI/bge-base-en-v1.5
# For OpenAI: text-embedding-ada-002, text-embedding-3-small, text-embedding-3-large
MODEL_EMBEDDING_NAME=text-embedding-ada-002

# Vector dimension (must match your model's output)
# Common dimensions: 1024 (Qwen3), 1536 (OpenAI ada-002), 3072 (OpenAI 3-large)
VECTOR_DIMENSION=1536

# Enable/disable automatic vector storage for all scraped content
# When enabled, embeddings are generated and stored in PostgreSQL with pgvector
ENABLE_VECTOR_STORAGE=false

# Enable asynchronous vector storage processing (future feature)
# When enabled, embeddings will be processed asynchronously to not block scraping
VECTOR_STORAGE_ASYNC=false

# Maximum content length for embedding generation (characters)
# Content longer than this will be truncated before embedding
MAX_EMBEDDING_CONTENT_LENGTH=5000

# Minimum similarity threshold for vector search results (0.0 - 1.0)
# Higher values return more relevant but fewer results
# Recommended: 0.7 for high precision, 0.5 for broader results
MIN_SIMILARITY_THRESHOLD=0.7
# set if you'd like to send slack server health status messages
SLACK_WEBHOOK_URL=
# set if you'd like to send posthog events like job logs
POSTHOG_API_KEY=
# set if you'd like to send posthog events like job logs
POSTHOG_HOST=

STRIPE_PRICE_ID_STANDARD=
STRIPE_PRICE_ID_SCALE=
STRIPE_PRICE_ID_STARTER=
STRIPE_PRICE_ID_HOBBY=
STRIPE_PRICE_ID_HOBBY_YEARLY=
STRIPE_PRICE_ID_STANDARD_NEW=
STRIPE_PRICE_ID_STANDARD_NEW_YEARLY=
STRIPE_PRICE_ID_GROWTH=
STRIPE_PRICE_ID_GROWTH_YEARLY=

# set if you'd like to use the fire engine closed beta
FIRE_ENGINE_BETA_URL=

# Proxy Settings for Playwright (Alternative you can can use a proxy service like oxylabs, which rotates IPs for you on every request)
PROXY_SERVER=
PROXY_USERNAME=
PROXY_PASSWORD=
# set if you'd like to block media requests to save proxy bandwidth
BLOCK_MEDIA=

# Set this to the URL of your webhook when using the self-hosted version of FireCrawl
SELF_HOSTED_WEBHOOK_URL=

# Set this to the HMAC secret of your webhook when using the self-hosted version of FireCrawl
SELF_HOSTED_WEBHOOK_HMAC_SECRET=

# Resend API Key for transactional emails
RESEND_API_KEY=

# LOGGING_LEVEL determines the verbosity of logs that the system will output.
# Available levels are:
# NONE - No logs will be output.
# ERROR - For logging error messages that indicate a failure in a specific operation.
# WARN - For logging potentially harmful situations that are not necessarily errors.
# INFO - For logging informational messages that highlight the progress of the application.
# DEBUG - For logging detailed information on the flow through the system, primarily used for debugging.
# TRACE - For logging more detailed information than the DEBUG level.
# Set LOGGING_LEVEL to one of the above options to control logging output.
LOGGING_LEVEL=INFO



# x402 Payment Configuration
X402_PAY_TO_ADDRESS=
                    # ^ Address taken from -> https://portfolio.metamask.io/
X402_NETWORK=base-sepolia
X402_FACILITATOR_URL=https://x402.org/facilitator
X402_ENABLED=true
X402_VERIFICATION_TIMEOUT=30000

CDP_API_KEY_ID=""
CDP_API_KEY_SECRET=""
                  # ^ KEYS taken from -> https://portal.cdp.coinbase.com/projects/api-keys

## ENDPOINT PRICING TEST $0.01
X402_ENDPOINT_PRICE_USD=0.01

# ===== Language Filtering Configuration =====

# Automatically filter crawled content by language across all endpoints
# This setting applies to crawl, map, and batch-scrape operations
# 
# Options:
# - Leave empty or set to 'all': No language filtering (default behavior)
# - Set to a language code: Filter content to only include specified language
#
# Supported language codes include:
# - en (English)          - es (Spanish)           - fr (French)
# - de (German)           - it (Italian)           - pt (Portuguese)  
# - ru (Russian)          - ja (Japanese)          - ko (Korean)
# - zh (Chinese)          - ar (Arabic)            - hi (Hindi)
# - nl (Dutch)            - sv (Swedish)           - no (Norwegian)
# - da (Danish)           - fi (Finnish)           - pl (Polish)
# - tr (Turkish)          - he (Hebrew)            - th (Thai)
# - vi (Vietnamese)       - id (Indonesian)        - ms (Malay)
# - uk (Ukrainian)        - cs (Czech)             - hu (Hungarian)
#
# The system automatically excludes URLs containing language indicators
# for other languages (e.g., /es/, /fr/, ?lang=de, etc.)
#
# Examples:
# DEFAULT_CRAWL_LANGUAGE=en    # English content only
# DEFAULT_CRAWL_LANGUAGE=es    # Spanish content only  
# DEFAULT_CRAWL_LANGUAGE=all   # No filtering (crawl all languages)
DEFAULT_CRAWL_LANGUAGE=